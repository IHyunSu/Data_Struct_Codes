5 26 1 77 11 61 15 59 19 48
n = 10

initList[] = a[]
mergedList[] = extra[]

mergePass(a, extra, n, s)

s = 1

for문
s = 1 // i <= 9 ( n-2*s+1 ) // 1 3 5 7 9

ex ; s = 2 -> 7까지 // 2 6
     s = 4 -> 3까지 // X
     s = 8 X-> -X

s = 1 // merge(initList, mergedList, 
                1 3 5 7 9(i), 1 3 5 7 9(i+s-1), 2 4 6 8 10(i+2*s-1))


merge(element initList[], element mergedList[], int i, int m, int n)

i = 1 3 5 7 9, m = 1 3 5 7 9, n = 2 4 6 8 10

j = 2 4 6 8 10 (m+1)
k = 1 3 5 7 9

i <= 1 3 5 7 9 && j <= 2 4 6 8 10   initList = 5 26 1 77 11 61 15 59 19 48
                                               i j  i j  i  j  i  j  i  j
                                                 t
                                               
i = 1, j = 2
while (i <= m && j <= n) 
    if (initList[i].key <= initList[j].key)
        mergeList[k++] = initList[i++] // 2 
    else
        mergeList[k++] = initList[j++]

-> (5) // k = 2, i = 2

if (i > m)
    for (t = j; t <= n; t++)
        mergeList[t] = initList[t]
else
    for (t = i; t <= m; t++)
        mergeList[k+t-i] = initList[t]

-> (5 26)

i = 1 3 5 7 9, m = 1 3 5 7 9, n = 2 4 6 8 10

j = 2 4 6 8 10 (m+1)
k = 1 3 5 7 9

i <= 1 3 5 7 9 && j <= 2 4 6 8 10   initList = 5 26 1 77 11 61 15 59 19 48
                                               i j  i j  i  j  i  j  i  j
                                                 t

i = 3, j = 4
while (i <= m && j <= n) 
    if (initList[i].key <= initList[j].key)
        mergeList[k++] = initList[i++] // i = 4, k = 4
    else
        mergeList[k++] = initList[j++]

-> (5 26) (1) // i = 4, k = 4

if (i > m) 4 > 3
    for (t = j; t <= n; t++) // j = 4, n = 4
        mergeList[t] = initList[t]
else
    for (t = i; t <= m; t++)
        mergeList[k+t-i] = initList[t]

-> (5 26) (1 77) 



